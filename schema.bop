message User {
  1 -> string name;
  2 -> string uid;
}

enum SessionMemberRole {
  CREATOR = 1;
  MEMBER = 2;
}

struct SessionMember {
  User user;
  SessionMemberRole role;
}

enum SessionDeleteReason {
  EXPIRED = 1;
  CREATORS_DECISION = 2;
  USER_LEFT = 3;
}

enum ErrorCode {
  UNKNOWN = 1;
  INVALID_COMMAND = 2;
  SESSION_NOT_FOUND = 3;
  SESSION_ID_REQUIRED = 4;
  SESSION_YOU_HAVE_ONE = 5;
  SESSION_YOU_HAVE_NONE = 6;
  SESSION_YOU_ARE_NOT_CREATOR = 7;
  SESSION_YOU_ARE_NOT_MEMBER = 8;
  SESSION_CANNOT_LEAVE_AS_CREATOR = 9;
  SONG_NOT_FOUND = 10;
  SONG_HASH_REQUIRED = 11;
  SONG_VERSE_IDX_REQUIRED = 12;
  SONG_VERSE_IDX_INVALID = 13;
  SONG_VERSE_DOES_NOT_EXIST = 14;
}

union Command {
  1 -> message HelloRequest {
    1 -> string name;
    2 -> string uid;
  };

  2 -> struct SessionCreate {};
  3 -> struct SessionDelete {};
  4 -> struct SessionJoin { string id; };
  5 -> struct SessionLeave {};
  6 -> struct SessionGet {};
  
  7 -> struct SpreadSongVerse {
    string songHash;
    uint8 verseIdx;
  };
}

union Message {
  1 -> struct ErrorMessage {
    ErrorCode code;
  };

  2 -> struct HelloResponse {
    string uid;
  };

  3-> struct SessionDetails {
    string id;
    date expires;
    SessionMember[] members;
  };

  4 -> struct SessionDeleted {
    SessionDeleteReason reason;
  };
  
  5 -> struct CurrentSongVerse {
    string songHash;
    uint8 verseIdx;
  };
}
